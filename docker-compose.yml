version: "3.9"
  
services:
  auth:
    container_name: auth_service
    build: ./auth
    ports: 
      - "8500:8083"
    restart: always
  chat:
    container_name: chat_service
    build: ./chat
    ports:
      - "8501:8085" 
    restart: always
  postgres-prod:
    image: postgres 
    container_name: postgresDbProd
    env_file:
      - ./postgres/migrations/.env 
    ports:
      - "${PG_PROD_PORT}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_DB: ${PG_DATABASE_NAME}
  postgres-local:
    image: postgres
    container_name: postgresDbLocal
    env_file:
    - ./postgres/migrations-local/local.env
    ports:
      - "${PG_LOCAL_PORT}:5432"
    volumes:
      - posgres_volume_local:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_DB: ${PG_DATABASE_NAME}
  migrator-prod:  
    container_name: migration-prod
    build:
      context: ./postgres/migrations
      dockerfile: migration.Dockerfile
    restart: on-failure
  migrator-local:
    container_name: migration-local
    build:
      context: ./postgres/migrations-local
      dockerfile: migrationlocal.Dockerfile 
    restart: on-failure 
    


volumes:
  pgdata:
    driver: local
  posgres_volume_local:
    driver: local